{"version":3,"sources":["@traceur/generated/TemplateParser/5","src/forms/directives.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/10","src/forms/@traceur/generated/TemplateParser/8","src/forms/@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","src/forms/@traceur/generated/TemplateParser/40","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"src/forms/directives.js","sourceRoot":"/Users/deast/Angular/es6-shim/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","import {Template, Component, Decorator, NgElement, Ancestor, onChange} from 'angular2/core';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {isBlank, isPresent, CONST} from 'angular2/src/facade/lang';\nimport {StringMapWrapper, ListWrapper} from 'angular2/src/facade/collection';\nimport {ControlGroup, Control} from './model';\n\nclass ControlGroupDirectiveBase {\n  addDirective(directive):void {}\n  findControl(name:string):Control { return null; }\n}\n\n@CONST()\nexport class ControlValueAccessor {\n  readValue(el){}\n  writeValue(el, value):void {}\n}\n\n@CONST()\nclass DefaultControlValueAccessor extends ControlValueAccessor {\n  constructor() {\n    super();\n  }\n\n  readValue(el) {\n    return DOM.getValue(el);\n  }\n\n  writeValue(el, value):void {\n    DOM.setValue(el,value);\n  }\n}\n\n@CONST()\nclass CheckboxControlValueAccessor extends ControlValueAccessor {\n  constructor() {\n    super();\n  }\n\n  readValue(el):boolean {\n    return DOM.getChecked(el);\n  }\n\n  writeValue(el, value:boolean):void {\n    DOM.setChecked(el, value);\n  }\n}\n\nvar controlValueAccessors = {\n  \"checkbox\" : new CheckboxControlValueAccessor(),\n  \"text\" : new DefaultControlValueAccessor()\n};\n\nfunction controlValueAccessorFor(controlType:string):ControlValueAccessor {\n  var accessor = StringMapWrapper.get(controlValueAccessors, controlType);\n  if (isPresent(accessor)) {\n    return accessor;\n  } else {\n    return StringMapWrapper.get(controlValueAccessors, \"text\");\n  }\n}\n\n\nexport class ControlDirectiveBase {\n  _groupDecorator:ControlGroupDirectiveBase;\n  _el:NgElement;\n\n  controlName:string;\n  type:string;\n  valueAccessor:ControlValueAccessor;\n\n  constructor(groupDecorator, el:NgElement)  {\n    this._groupDecorator = groupDecorator;\n    this._el = el;\n  }\n\n  _initialize() {\n    if (isBlank(this.valueAccessor)) {\n      this.valueAccessor = controlValueAccessorFor(this.type);\n    }\n    this._groupDecorator.addDirective(this);\n    this._updateDomValue();\n    DOM.on(this._el.domElement, \"change\", (_) => this._updateControlValue());\n  }\n\n  _updateDomValue() {\n    this.valueAccessor.writeValue(this._el.domElement, this._control().value);\n  }\n\n  _updateControlValue() {\n    this._control().value = this.valueAccessor.readValue(this._el.domElement);\n  }\n\n  _control() {\n    return this._groupDecorator.findControl(this.controlName);\n  }\n}\n\n@Decorator({\n  lifecycle: [onChange],\n  selector: '[control-name]',\n  bind: {\n    'controlName' : 'control-name',\n    'type' : 'type'\n  }\n})\nexport class ControlNameDirective extends ControlDirectiveBase {\n  constructor(@Ancestor() groupDecorator:ControlGroupDirective, el:NgElement) {\n    super(groupDecorator, el);\n  }\n\n  onChange(_) {\n    this._initialize();\n  }\n}\n\n@Decorator({\n  lifecycle: [onChange],\n  selector: '[control]',\n  bind: {\n    'controlName' : 'control',\n    'type' : 'type'\n  }\n})\nexport class ControlDirective extends ControlDirectiveBase {\n  constructor(@Ancestor() groupDecorator:NewControlGroupDirective, el:NgElement) {\n    super(groupDecorator, el);\n  }\n\n  onChange(_) {\n    this._initialize();\n  }\n}\n\n@Decorator({\n  selector: '[control-group]',\n  bind: {\n    'controlGroup' : 'control-group'\n  }\n})\nexport class ControlGroupDirective extends ControlGroupDirectiveBase {\n  _controlGroup:ControlGroup;\n  _directives:List<ControlNameDirective>;\n\n  constructor() {\n    super();\n    this._directives = ListWrapper.create();\n  }\n\n  set controlGroup(controlGroup:ControlGroup) {\n    this._controlGroup = controlGroup;\n    ListWrapper.forEach(this._directives, (cd) => cd._updateDomValue());\n  }\n\n  addDirective(c:ControlNameDirective) {\n    ListWrapper.push(this._directives, c);\n  }\n\n  findControl(name:string):Control {\n    return this._controlGroup.controls[name];\n  }\n}\n\n@Component({\n  selector: '[new-control-group]',\n  bind: {\n    'initData' : 'new-control-group'\n  }\n})\n@Template({inline: '<content>'})\nexport class NewControlGroupDirective extends ControlGroupDirectiveBase {\n  _initData:any;\n  _controlGroup:ControlGroup;\n  _directives:List<ControlNameDirective>;\n\n  constructor() {\n    super();\n    this._directives = ListWrapper.create();\n  }\n\n  set initData(value) {\n    this._initData = value;\n  }\n\n  addDirective(c:ControlDirective) {\n    ListWrapper.push(this._directives, c);\n    this._controlGroup = null;\n  }\n\n  findControl(name:string):Control {\n    if (isBlank(this._controlGroup)) {\n      this._controlGroup = this._createControlGroup();\n    }\n    return this._controlGroup.controls[name];\n  }\n\n  _createControlGroup():ControlGroup {\n    var controls = ListWrapper.reduce(this._directives, (memo, cd) => {\n      var initControlValue = this._initData[cd.controlName];\n      memo[cd.controlName] = new Control(initControlValue);\n      return memo;\n    }, {});\n    return new ControlGroup(controls);\n  }\n\n  get value() {\n    return this._controlGroup.value;\n  }\n}\n\nexport var FormDirectives = [\n  ControlGroupDirective, ControlNameDirective,\n  ControlDirective, NewControlGroupDirective\n];\n","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","Object.getOwnPropertyDescriptor($__placeholder__0)","$__export($__placeholder__0, $__placeholder__1)"]}