{"version":3,"sources":["@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/10","src/core/compiler/compiler.js","src/core/compiler/@traceur/generated/TemplateParser/8","src/core/compiler/@traceur/generated/TemplateParser/25","src/core/compiler/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"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","file":"src/core/compiler/compiler.js","sourceRoot":"/Users/radokirov/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {Type, isBlank, isPresent, BaseException, normalizeBlank, stringify} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper, Map, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ChangeDetection, Parser} from 'angular2/change_detection';\n\nimport {DirectiveMetadataReader} from './directive_metadata_reader';\nimport {ProtoView} from './view';\nimport {CompilePipeline} from './pipeline/compile_pipeline';\nimport {CompileElement} from './pipeline/compile_element';\nimport {createDefaultSteps} from './pipeline/default_steps';\nimport {TemplateLoader} from './template_loader';\nimport {TemplateResolver} from './template_resolver';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {Template} from '../annotations/template';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {CompileStep} from './pipeline/compile_step';\nimport {ComponentUrlMapper} from './component_url_mapper';\nimport {UrlResolver} from './url_resolver';\n\n\n/**\n * Cache that stores the ProtoView of the template of a component.\n * Used to prevent duplicate work and resolve cyclic dependencies.\n */\nexport class CompilerCache {\n  _cache:Map;\n  constructor() {\n    this._cache = MapWrapper.create();\n  }\n\n  set(component:Type, protoView:ProtoView) {\n    MapWrapper.set(this._cache, component, protoView);\n  }\n\n  get(component:Type):ProtoView {\n    var result = MapWrapper.get(this._cache, component);\n    return normalizeBlank(result);\n  }\n\n  clear() {\n    MapWrapper.clear(this._cache);\n  }\n}\n\n/**\n * The compiler loads and translates the html templates of components into\n * nested ProtoViews. To decompose its functionality it uses\n * the CompilePipeline and the CompileSteps.\n */\nexport class Compiler {\n  _reader: DirectiveMetadataReader;\n  _parser:Parser;\n  _compilerCache:CompilerCache;\n  _changeDetection:ChangeDetection;\n  _templateLoader:TemplateLoader;\n  _compiling:Map<Type, Promise>;\n  _shadowDomStrategy: ShadowDomStrategy;\n  _shadowDomDirectives: List<DirectiveMetadata>;\n  _templateResolver: TemplateResolver;\n  _componentUrlMapper: ComponentUrlMapper;\n  _urlResolver: UrlResolver;\n  _appUrl: string;\n\n  constructor(changeDetection:ChangeDetection,\n              templateLoader:TemplateLoader,\n              reader: DirectiveMetadataReader,\n              parser:Parser,\n              cache:CompilerCache,\n              shadowDomStrategy: ShadowDomStrategy,\n              templateResolver: TemplateResolver,\n              componentUrlMapper: ComponentUrlMapper,\n              urlResolver: UrlResolver) {\n    this._changeDetection = changeDetection;\n    this._reader = reader;\n    this._parser = parser;\n    this._compilerCache = cache;\n    this._templateLoader = templateLoader;\n    this._compiling = MapWrapper.create();\n    this._shadowDomStrategy = shadowDomStrategy;\n    this._shadowDomDirectives = [];\n    var types = shadowDomStrategy.polyfillDirectives();\n    for (var i = 0; i < types.length; i++) {\n      ListWrapper.push(this._shadowDomDirectives, reader.read(types[i]));\n    }\n    this._templateResolver = templateResolver;\n    this._componentUrlMapper = componentUrlMapper;\n    this._urlResolver = urlResolver;\n    this._appUrl = urlResolver.resolve(null, './');\n  }\n\n  createSteps(component:Type, template: Template):List<CompileStep> {\n    // Merge directive metadata (from the template and from the shadow dom strategy)\n    var dirMetadata = [];\n    var tplMetadata = ListWrapper.map(this._flattenDirectives(template),\n      (d) => this._reader.read(d));\n    dirMetadata = ListWrapper.concat(dirMetadata, tplMetadata);\n    dirMetadata = ListWrapper.concat(dirMetadata, this._shadowDomDirectives);\n\n    var cmpMetadata = this._reader.read(component);\n\n    var templateUrl = this._templateLoader.getTemplateUrl(template);\n\n    return createDefaultSteps(this._changeDetection, this._parser, cmpMetadata, dirMetadata,\n      this._shadowDomStrategy, templateUrl);\n  }\n\n  compile(component: Type):Promise<ProtoView> {\n    var protoView = this._compile(component);\n    return PromiseWrapper.isPromise(protoView) ? protoView : PromiseWrapper.resolve(protoView);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compile(component: Type) {\n    var protoView = this._compilerCache.get(component);\n    if (isPresent(protoView)) {\n      // The component has already been compiled into a ProtoView,\n      // returns a resolved Promise.\n      return protoView;\n    }\n\n    var pvPromise = MapWrapper.get(this._compiling, component);\n    if (isPresent(pvPromise)) {\n      // The component is already being compiled, attach to the existing Promise\n      // instead of re-compiling the component.\n      // It happens when a template references a component multiple times.\n      return pvPromise;\n    }\n\n    var template = this._templateResolver.resolve(component);\n\n    var componentUrl = this._componentUrlMapper.getUrl(component);\n    var baseUrl = this._urlResolver.resolve(this._appUrl, componentUrl);\n    this._templateLoader.setBaseUrl(template, baseUrl);\n\n    var tplElement = this._templateLoader.load(template);\n\n    if (PromiseWrapper.isPromise(tplElement)) {\n      pvPromise = PromiseWrapper.then(tplElement,\n        (el) => this._compileTemplate(template, el, component),\n        (_) => { throw new BaseException(`Failed to load the template for ${stringify(component)}`); }\n      );\n      MapWrapper.set(this._compiling, component, pvPromise);\n      return pvPromise;\n    }\n\n    return this._compileTemplate(template, tplElement, component);\n  }\n\n  // TODO(vicb): union type return ProtoView or Promise<ProtoView>\n  _compileTemplate(template: Template, tplElement, component: Type) {\n    var pipeline = new CompilePipeline(this.createSteps(component, template));\n    var compilationCtxtDescription = stringify(this._reader.read(component).type);\n    var compileElements;\n\n    try {\n      compileElements = pipeline.process(tplElement, compilationCtxtDescription);\n    } catch(ex) {\n      return PromiseWrapper.reject(ex);\n    }\n\n    var protoView = compileElements[0].inheritedProtoView;\n\n    // Populate the cache before compiling the nested components,\n    // so that components can reference themselves in their template.\n    this._compilerCache.set(component, protoView);\n    MapWrapper.delete(this._compiling, component);\n\n    // Compile all the components from the template\n    var nestedPVPromises = [];\n    for (var i = 0; i < compileElements.length; i++) {\n      var ce = compileElements[i];\n      if (isPresent(ce.componentDirective)) {\n        this._compileNestedProtoView(ce, nestedPVPromises);\n      }\n    }\n\n    if (protoView.stylePromises.length > 0) {\n      // The protoView is ready after all asynchronous styles are ready\n      var syncProtoView = protoView;\n      protoView = PromiseWrapper.all(syncProtoView.stylePromises).then((_) => syncProtoView);\n    }\n\n    if (nestedPVPromises.length > 0) {\n      // Returns ProtoView Promise when there are any asynchronous nested ProtoViews.\n      // The promise will resolved after nested ProtoViews are compiled.\n      return PromiseWrapper.then(PromiseWrapper.all(nestedPVPromises),\n        (_) => protoView,\n        (e) => { throw new BaseException(`${e.message} -> Failed to compile ${stringify(component)}`); }\n      );\n    }\n\n    return protoView;\n  }\n\n  _compileNestedProtoView(ce: CompileElement, promises: List<Promise>) {\n    var protoView = this._compile(ce.componentDirective.type);\n\n    if (PromiseWrapper.isPromise(protoView)) {\n      ListWrapper.push(promises, protoView);\n      protoView.then(function (protoView) {\n        ce.inheritedElementBinder.nestedProtoView = protoView;\n      });\n    } else {\n      ce.inheritedElementBinder.nestedProtoView = protoView;\n    }\n  }\n\n  _flattenDirectives(template: Template):List<Type> {\n    if (isBlank(template.directives)) return [];\n\n    var directives = [];\n    this._flattenList(template.directives, directives);\n\n    return directives;\n  }\n\n  _flattenList(tree:List<any>, out:List<Type>) {\n    for (var i = 0; i < tree.length; i++) {\n      var item = tree[i];\n      if (ListWrapper.isList(item)) {\n        this._flattenList(item, out);\n      } else {\n        ListWrapper.push(out, item);\n      }\n    }\n  }\n\n}\n\n\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.genericType($__placeholder__0)","assert.type.$__placeholder__0)"]}