{"version":3,"sources":["@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/10","src/core/compiler/url_resolver.js","src/core/compiler/@traceur/generated/TemplateParser/8","src/core/compiler/@traceur/generated/TemplateParser/7"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,8DAAoB,UAAS,SAAQ;;;;;;;;;ACApD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,cAAoB,KAAG,QAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,UAAoB,KAAG,IAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;kBGFY,CAAA,SAAQ,AAAC,iBCAjC,SAAQ,AAAC;AACC,AAAI,UAAA,cCEP,SAAM,YAAU,CAGT,AAAE,CAAA;AACZ,aAAI,OAAM,AAAE,CAAA,WAAU,EAAE,CAAC,CAAG;AAC1B,sBAAU,EAAE,EAAI,CAAA,GAAE,cAAe,AAAC,CAAA,GAAE,CAAC,CAAC;UACxC;AAAA,QDR8C,ACShD,CDTiD;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,eCU5C,OAAM,CAAN,UAAQ,OAAc,CAAG,CAAA,GAAE,CAAmB;AAC5C,eAAI,OAAO,AAAC,CAAA,OAAM,CAAC,CAAG;AACpB,wBAAU,EAAE,KAAK,EAAI,IAAE,CAAC;AACxB,mBAAO,CAAA,WAAU,EAAE,KAAK,CAAC;YAC3B;AAAA,AAEA,eAAI,OAAO,AAAC,CAAA,GAAE,CAAC,CAAA,EAAK,CAAA,GAAE,GAAK,GAAC;AAAG,mBAAO,QAAM,CAAC;AAAA,AAE7C,eAAI,GAAE,CAAE,CAAA,CAAC,GAAK,IAAE,CAAG;AACjB,kBAAM,IAAI,cAAY,AAAE,EAAA,4BAA6B,EAAA,IAAE,EAAA,SAAU,EAAA,QAAM,EAAG,CAAC;YAC7E;AAAA,AAEI,cAAA,CAAA,CAAA,EAAI,CAAA,aAAY,WAAY,AAAC,CAAA,SAAQ,CAAG,IAAE,CAAC,CAAC;AAEhD,eAAI,SAAS,AAAC,CAAA,CAAA,CAAE,CAAA,CAAC,CAAC,CAAG;AACnB,mBAAO,IAAE,CAAC;YACZ;AAAA,AAEA,sBAAU,EAAE,KAAK,EAAI,CAAA,OAAM,EAAI,OAAK,CAAA,CAAI,IAAE,CAAC;AAC3C,iBAAO,CAAA,WAAU,EAAE,KAAK,CAAC;UAC3B,MD7B8D,CAAC;MACzD,AAAC,EAAC,EDJ4D;AEiCtE,WCjCK,eAAe,AAAC,CAAA,WAAA,UAAA,QAAA,CAAA,aAAA,CACZ,EAAA,GAAE,CAAG,UAAS,AAAE,CAAA;AAAC,eAAA,ECD1B,CAAA,MAAK,KAAK,OAAA,CAAA,CAAV,EAAA,MAAK,KAAK,OAAA,CAAA,CAAA,CDCuC;QAAC,CAAC,CAAC,CAAC;gBDkCrC,CAAA,aAAY,OAAQ,AAAC,CAAA,eAAc,CAAC;ILjCrB;EAC3B,CAAA;ADDI,CAAC,CAAC;AMkC4B","file":"src/core/compiler/url_resolver.js","sourceRoot":"/Users/radokirov/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {isPresent, isBlank, RegExpWrapper, BaseException} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nexport class UrlResolver {\n  static a;\n\n  constructor() {\n    if (isBlank(UrlResolver.a)) {\n      UrlResolver.a = DOM.createElement('a');\n    }\n  }\n\n  resolve(baseUrl: string, url: string): string {\n    if (isBlank(baseUrl)) {\n      UrlResolver.a.href = url;\n      return UrlResolver.a.href;\n    }\n\n    if (isBlank(url) || url == '') return baseUrl;\n\n    if (url[0] == '/') {\n      throw new BaseException(`Could not resolve the url ${url} from ${baseUrl}`);\n    }\n\n    var m = RegExpWrapper.firstMatch(_schemeRe, url);\n\n    if (isPresent(m[1])) {\n      return url;\n    }\n\n    UrlResolver.a.href = baseUrl + '/../' + url;\n    return UrlResolver.a.href;\n  }\n}\n\nvar _schemeRe = RegExpWrapper.create('^([^:/?#]+:)?');\n","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}