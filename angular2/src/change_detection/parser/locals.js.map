{"version":3,"sources":["@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/10","src/change_detection/parser/locals.js","src/change_detection/parser/@traceur/generated/TemplateParser/24","src/change_detection/parser/@traceur/generated/TemplateParser/23"],"names":[],"mappings":"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","file":"src/change_detection/parser/locals.js","sourceRoot":"/Users/deast/Angular/quickstart/node_modules/angular2/es6/prod/","sourcesContent":["System.register($__placeholder__0, function($__export) {\n          $__placeholder__1\n        });","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {isPresent, BaseException} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nexport class Locals {\n  parent:Locals;\n  current:Map;\n\n  constructor(parent:Locals, current:Map) {\n    this.parent = parent;\n    this.current = current;\n  }\n\n  contains(name:string):boolean {\n    if (MapWrapper.contains(this.current, name)) {\n      return true;\n    }\n\n    if (isPresent(this.parent)) {\n      return this.parent.contains(name);\n    }\n\n    return false;\n  }\n\n  get(name:string) {\n    if (MapWrapper.contains(this.current, name)) {\n      return MapWrapper.get(this.current, name);\n    }\n\n    if (isPresent(this.parent)) {\n      return this.parent.get(name);\n    }\n\n    throw new BaseException(`Cannot find '${name}'`);\n  }\n\n  set(name:string, value) {\n    // TODO(rado): consider removing this check if we can guarantee this is not\n    // exposed to the public API.\n    // TODO: vsavkin maybe it should check only the local map\n    if (MapWrapper.contains(this.current, name)) {\n      MapWrapper.set(this.current, name, value);\n    } else {\n      throw new BaseException('Setting of new keys post-construction is not supported.');\n    }\n  }\n\n  clearValues() {\n    MapWrapper.clearValues(this.current);\n  }\n}","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.$__placeholder__0)"]}